# docker-compose.yml (FIXED VERSION)

services:
  # Trading Bot Application
  trading-bot:
    build: .
    container_name: trading-bot
    ports:
      - "5000:5000"  # Web UI
      - "8000:8000"  # API (optional)
    environment:
      # Database (FIXED - matching passwords and authSource)
      - MONGODB_URL=mongodb://trader:secure_trading_password@mongodb:27017/trading_bot?authSource=admin
      - MONGO_USERNAME=trader
      - MONGO_PASSWORD=secure_trading_password
      
      # External Services (internal Docker network)
      - CCXT_GATEWAY_URL=http://ccxt-bridge:3000
      - QUICKCHART_URL=http://quickchart:3400
      - REDIS_URL=redis://:redis_trading_password@redis:6379/0
      
      # Security
      - SECRET_KEY=your_secret_key_min_32_characters_long
      - ENCRYPTION_KEY=fernet_key_44_characters_base64_encoded_here
      - JWT_SECRET=your_jwt_secret_key_for_authentication
      
      # Application
      - FLASK_ENV=development
      - LOG_LEVEL=INFO
      - LOG_FILE=logs/trading_bot.log
      - WEB_HOST=0.0.0.0
      - WEB_PORT=5000
      
      # Trading Configuration
      - DEFAULT_EXCHANGE=kucoin
      - DEFAULT_QUOTE_CURRENCY=USDT
      - DEFAULT_FEE_RATE=0.0005
      
      # Optional Telegram
      - TELEGRAM_BOT_TOKEN=your_telegram_bot_token_if_needed
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./config:/app/config
    depends_on:
      mongodb:
        condition: service_healthy
      ccxt-bridge:
        condition: service_healthy
      quickchart:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - trading-network

  # MongoDB Database (FIXED - Added health check)
  mongodb:
    image: mongo:6.0
    container_name: trading-bot-db_ltb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=trader
      - MONGO_INITDB_ROOT_PASSWORD=secure_trading_password
      - MONGO_INITDB_DATABASE=trading_bot
    volumes:
      - mongodb_data:/data/db
      - ./mongodb/init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - trading-network
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # CCXT Bridge (Your Local Image - Internal Only)
  ccxt-bridge:
    image: mat/ccxt-bridge:latest
    container_name: ccxt-bridge_ltb
    environment:
      - NODE_ENV=production
      - PORT=3000
      - TZ=Africa/Casablanca
    env_file:
      - .ccxt-bridge.env
    volumes:
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    networks:
      - trading-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/ticker?symbol=BTC/USDT"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # QuickChart Service
  quickchart:
    image: ianw/quickchart:latest
    container_name: quickchart_ltb
    environment:
      - PORT=3400
      - CACHE_TIMEOUT=60000
      - CHART_JS_VERSION=3.9.1
    restart: unless-stopped
    networks:
      - trading-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3400/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # Redis Cache (FIXED - Updated password handling)
  redis:
    image: redis:7-alpine
    container_name: trading-bot-cache
    command: redis-server --appendonly yes --requirepass redis_trading_password
    environment:
      - REDIS_PASSWORD=redis_trading_password
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - trading-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis_trading_password", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  trading-network:
    driver: bridge
